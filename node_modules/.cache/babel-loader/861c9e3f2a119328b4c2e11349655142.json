{"ast":null,"code":"import _classCallCheck from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maame/Desktop/reactnd-project-myreads-starter/src/ShelfChanger.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ShelfChanger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShelfChanger, _Component);\n\n  function ShelfChanger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShelfChanger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShelfChanger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateShelf = function (event) {\n      return _this.props.changeShelf(_this.props.book, event.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ShelfChanger, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          book = _this$props.book,\n          books = _this$props.books; // set current shelf to none as default\n\n      var currentShelf = 'none'; // if book is in current list, set current shelf to book.shelf\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = books[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.id === book.id) {\n            currentShelf = item.shelf;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"book-shelf-changer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.updateShelf,\n        defaultValue: currentShelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"none\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"None\")));\n    }\n  }]);\n\n  return ShelfChanger;\n}(Component);\n\nShelfChanger.propTypes = {\n  book: PropTypes.object.isRequired,\n  books: PropTypes.array.isRequired,\n  changeShelf: PropTypes.func.isRequired\n};\nexport default ShelfChanger;","map":{"version":3,"sources":["/Users/maame/Desktop/reactnd-project-myreads-starter/src/ShelfChanger.js"],"names":["React","Component","PropTypes","ShelfChanger","updateShelf","event","props","changeShelf","book","target","value","books","currentShelf","item","id","shelf","propTypes","object","isRequired","array","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAOJC,W,GAAc,UAAAC,KAAK;AAAA,aACjB,MAAKC,KAAL,CAAWC,WAAX,CAAuB,MAAKD,KAAL,CAAWE,IAAlC,EAAwCH,KAAK,CAACI,MAAN,CAAaC,KAArD,CADiB;AAAA,K;;;;;;;6BAGV;AAAA,wBACiB,KAAKJ,KADtB;AAAA,UACCE,IADD,eACCA,IADD;AAAA,UACOG,KADP,eACOA,KADP,EAGP;;AACA,UAAIC,YAAY,GAAG,MAAnB,CAJO,CAMP;;AANO;AAAA;AAAA;;AAAA;AAOP,6BAAiBD,KAAjB,8HAAwB;AAAA,cAAfE,IAAe;;AACtB,cAAIA,IAAI,CAACC,EAAL,KAAYN,IAAI,CAACM,EAArB,EAAyB;AACvBF,YAAAA,YAAY,GAAGC,IAAI,CAACE,KAApB;AACA;AACD;AACF;AAZM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcP,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,QAAQ,EAAE,KAAKX,WAAvB;AAAoC,QAAA,YAAY,EAAEQ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAKE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAME;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF;AAaD;;;;EArCwBX,S;;AAArBE,Y,CACGa,S,GAAY;AACjBR,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADN;AAEjBP,EAAAA,KAAK,EAAET,SAAS,CAACiB,KAAV,CAAgBD,UAFN;AAGjBX,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAAV,CAAeF;AAHX,C;AAuCrB,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShelfChanger extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  };\n\n  updateShelf = event =>\n    this.props.changeShelf(this.props.book, event.target.value);\n\n  render() {\n    const { book, books } = this.props;\n\n    // set current shelf to none as default\n    let currentShelf = 'none';\n\n    // if book is in current list, set current shelf to book.shelf\n    for (let item of books) {\n      if (item.id === book.id) {\n        currentShelf = item.shelf;\n        break;\n      }\n    }\n\n    return (\n      <div className=\"book-shelf-changer\">\n        <select onChange={this.updateShelf} defaultValue={currentShelf}>\n          <option value=\"none\" disabled>\n            Move to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default ShelfChanger;"]},"metadata":{},"sourceType":"module"}