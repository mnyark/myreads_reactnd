{"ast":null,"code":"import _classCallCheck from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maame/Desktop/reactnd-project-myreads-starter/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport * as BooksAPI from './BooksAPI';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: '',\n      newBooks: [],\n      searchErr: false\n    };\n\n    _this.getBooks = function (event) {\n      var query = event.target.value;\n\n      _this.setState({\n        query: query\n      }); // if user input => run the search\n\n\n      if (query) {\n        BooksAPI.search(query.trim(), 20).then(function (books) {\n          books.length > 0 ? _this.setState({\n            newBooks: books,\n            searchErr: false\n          }) : _this.setState({\n            newBooks: [],\n            searchErr: true\n          });\n        }); // if query is empty => reset state to default\n      } else _this.setState({\n        newBooks: [],\n        searchErr: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          query = _this$state.query,\n          newBooks = _this$state.newBooks,\n          searchErr = _this$state.searchErr;\n      var _this$props = this.props,\n          books = _this$props.books,\n          changeShelf = _this$props.changeShelf;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: this.getBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, newBooks.length > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Search returned \", newBooks.length, \" books \"), React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, newBooks.map(function (book) {\n        return React.createElement(Book, {\n          book: book,\n          books: books,\n          key: book.id,\n          changeShelf: changeShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }))), searchErr && React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Search did not return any books. Please try again!\")));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nSearch.propTypes = {\n  books: PropTypes.array.isRequired,\n  changeShelf: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/maame/Desktop/reactnd-project-myreads-starter/src/components/Search.js"],"names":["React","Component","PropTypes","Link","Book","BooksAPI","Search","state","query","newBooks","searchErr","getBooks","event","target","value","setState","search","trim","then","books","length","props","changeShelf","map","book","id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport * as BooksAPI from './BooksAPI';\n\nclass Search extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    changeShelf: PropTypes.func.isRequired\n  };\n\n  state = {\n    query: '',\n    newBooks: [],\n    searchErr: false\n  };\n\n  getBooks = event => {\n    const query = event.target.value;\n    this.setState({ query });\n\n    // if user input => run the search\n    if (query) {\n      BooksAPI.search(query.trim(), 20).then(books => {\n        books.length > 0\n          ? this.setState({ newBooks: books, searchErr: false })\n          : this.setState({ newBooks: [], searchErr: true });\n      });\n\n      // if query is empty => reset state to default\n    } else this.setState({ newBooks: [], searchErr: false });\n  };\n\n  render() {\n    const { query, newBooks, searchErr } = this.state;\n    const { books, changeShelf } = this.props;\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={this.getBooks}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          {newBooks.length > 0 && (\n            <div>\n              <h3>Search returned {newBooks.length} books </h3>\n              <ol className=\"books-grid\">\n                {newBooks.map(book => (\n                  <Book\n                    book={book}\n                    books={books}\n                    key={book.id}\n                    changeShelf={changeShelf}\n                  />\n                ))}\n              </ol>\n            </div>\n          )}\n          {searchErr && (\n            <h3>Search did not return any books. Please try again!</h3>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}