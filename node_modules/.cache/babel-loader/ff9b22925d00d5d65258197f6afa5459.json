{"ast":null,"code":"import _classCallCheck from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maame/Desktop/reactnd-project-myreads-starter/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport BookShelf from './BookShelf';\nimport SearchScreen from './SearchScreen';\nimport { shelfNames, shelfToList } from './utils'; //------------------------------------------------------------------------------\n// Books App\n//------------------------------------------------------------------------------\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      shelf_books: {\n        read: [],\n        currentlyReading: [],\n        wantToRead: []\n      } //----------------------------------------------------------------------------\n      // Mounting hook\n      //----------------------------------------------------------------------------\n\n    };\n\n    _this.moveBook = function (book, src, dst) {\n      if (src === dst) return;\n      BooksAPI.update(book, dst).then(function () {\n        _this.setState(function (state) {\n          var shelf_books = state.shelf_books;\n          if (src in _this.state.shelf_books) shelf_books[src] = shelf_books[src].filter(function (b) {\n            return b.id !== book.id;\n          });\n\n          if (dst !== 'none') {\n            book.shelf = dst;\n            shelf_books[dst].push(book);\n          }\n\n          return {\n            shelf_books: shelf_books\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        var shelf_books = {\n          read: [],\n          currentlyReading: [],\n          wantToRead: []\n        };\n        var i;\n\n        for (i = 0; i < books.length; ++i) {\n          shelf_books[books[i].shelf].push(books[i]);\n        }\n\n        _this2.setState({\n          shelf_books: shelf_books\n        });\n      });\n    } //----------------------------------------------------------------------------\n    // Move book between shelves\n    //----------------------------------------------------------------------------\n\n  }, {\n    key: \"render\",\n    //----------------------------------------------------------------------------\n    // Renderer\n    //----------------------------------------------------------------------------\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchScreen, {\n            moveBook: _this3.moveBook,\n            shelfList: shelfToList(_this3.state.shelf_books),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"list-books\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"list-books-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \"MyReads\")), React.createElement(\"div\", {\n            className: \"list-books-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, ['currentlyReading', 'wantToRead', 'read'].map(function (shelf_id) {\n            return React.createElement(\"div\", {\n              className: \"bookshelf\",\n              key: 'bs-' + shelf_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              className: \"bookshelf-title\",\n              key: 'h2-' + shelf_id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, shelfNames[shelf_id]), React.createElement(BookShelf, {\n              key: shelf_id,\n              shelfId: shelf_id,\n              books: _this3.state.shelf_books[shelf_id],\n              moveBook: _this3.moveBook,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }));\n          }))), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Add book\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/maame/Desktop/reactnd-project-myreads-starter/src/App.js"],"names":["React","BooksAPI","Route","Link","BookShelf","SearchScreen","shelfNames","shelfToList","BooksApp","state","shelf_books","read","currentlyReading","wantToRead","moveBook","book","src","dst","update","then","setState","filter","b","id","shelf","push","getAll","books","i","length","map","shelf_id","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport BookShelf from './BookShelf';\nimport SearchScreen from './SearchScreen';\nimport { shelfNames, shelfToList } from './utils';\n\n//------------------------------------------------------------------------------\n// Books App\n//------------------------------------------------------------------------------\nclass BooksApp extends React.Component {\n  //----------------------------------------------------------------------------\n  // The state\n  //----------------------------------------------------------------------------\n  state = {\n    shelf_books: {\n      read: [],\n      currentlyReading: [],\n      wantToRead: []\n    }\n  }\n\n  //----------------------------------------------------------------------------\n  // Mounting hook\n  //----------------------------------------------------------------------------\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      var shelf_books = {\n        read: [],\n        currentlyReading: [],\n        wantToRead: []\n      };\n      var i;\n      for(i = 0; i < books.length; ++i)\n        shelf_books[books[i].shelf].push(books[i]);\n      this.setState({shelf_books});\n    });\n  }\n\n  //----------------------------------------------------------------------------\n  // Move book between shelves\n  //----------------------------------------------------------------------------\n  moveBook = (book, src, dst) => {\n    if(src === dst)\n      return;\n    BooksAPI.update(book, dst)\n      .then(() => {\n        this.setState((state) => {\n          var shelf_books = state.shelf_books;\n          if(src in this.state.shelf_books)\n            shelf_books[src] = shelf_books[src].filter((b) => b.id !== book.id);\n          if(dst !== 'none') {\n            book.shelf = dst;\n            shelf_books[dst].push(book);\n          }\n          return {shelf_books};\n        });\n      });\n  }\n\n  //----------------------------------------------------------------------------\n  // Renderer\n  //----------------------------------------------------------------------------\n  render() {\n    return (\n      <div className=\"app\">\n        <Route path='/search' render={() => (\n          <SearchScreen\n            moveBook={this.moveBook}\n            shelfList={shelfToList(this.state.shelf_books)}\n            />\n        )}/>\n\n        <Route exact path='/' render={() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                {['currentlyReading', 'wantToRead', 'read'].map((shelf_id) => (\n                  <div className=\"bookshelf\"\n                       key={'bs-'+shelf_id}>\n                    <h2 className=\"bookshelf-title\"\n                        key={'h2-'+shelf_id}>\n                      {shelfNames[shelf_id]}\n                    </h2>\n                    <BookShelf\n                      key={shelf_id}\n                      shelfId={shelf_id}\n                      books={this.state.shelf_books[shelf_id]}\n                      moveBook={this.moveBook}\n                      />\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to='/search'>Add book</Link>\n            </div>\n          </div>\n\n        )}/>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n"]},"metadata":{},"sourceType":"module"}