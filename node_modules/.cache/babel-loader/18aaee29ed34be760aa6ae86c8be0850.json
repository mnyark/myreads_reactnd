{"ast":null,"code":"import _classCallCheck from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maame/Desktop/reactnd-project-myreads-starter/src/components/App.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport '../css/App.css';\nimport BookList from './BookList';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\nimport NotFound from './NotFound';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.changeShelf = function (changedBook, shelf) {\n      BooksAPI.update(changedBook, shelf).then(function (response) {\n        // set shelf for new or updated book\n        changedBook.shelf = shelf; // update state with changed book\n\n        _this.setState(function (prevState) {\n          return {\n            books: prevState.books // remove updated book from array\n            .filter(function (book) {\n              return book.id !== changedBook.id;\n            }) // add updated book to array\n            .concat(changedBook)\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // get books on load\n      BooksAPI.getAll().then(function (books) {\n        return _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var books = this.state.books;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(Search, {\n            books: books,\n            changeShelf: _this3.changeShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"list-books\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"list-books-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"MyReads\")), React.createElement(BookList, {\n            books: books,\n            changeShelf: _this3.changeShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"Search\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/maame/Desktop/reactnd-project-myreads-starter/src/components/App.js"],"names":["React","Route","Switch","BooksAPI","BookList","Link","Search","NotFound","BooksApp","state","books","changeShelf","changedBook","shelf","update","then","response","setState","prevState","filter","book","id","concat","getAll","history","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport '../css/App.css';\nimport BookList from './BookList';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\nimport NotFound from './NotFound';\n\nclass BooksApp extends React.Component {\n  state = { books: [] };\n\n  componentDidMount() {\n    // get books on load\n    BooksAPI.getAll().then(books => this.setState({ books }));\n  }\n\n  changeShelf = (changedBook, shelf) => {\n    BooksAPI.update(changedBook, shelf).then(response => {\n      // set shelf for new or updated book\n      changedBook.shelf = shelf;\n      // update state with changed book\n      this.setState(prevState => ({\n        books: prevState.books\n          // remove updated book from array\n          .filter(book => book.id !== changedBook.id)\n          // add updated book to array\n          .concat(changedBook)\n      }));\n    });\n  };\n\n  render() {\n    const { books } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route\n            path=\"/search\"\n            render={({ history }) => (\n              <Search books={books} changeShelf={this.changeShelf} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                  <h1>MyReads</h1>\n                </div>\n                <BookList books={books} changeShelf={this.changeShelf} />\n                <div className=\"open-search\">\n                  <Link to=\"/search\">Search</Link>\n                </div>\n              </div>\n            )}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n"]},"metadata":{},"sourceType":"module"}