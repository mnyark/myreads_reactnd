{"ast":null,"code":"import _classCallCheck from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maame/Desktop/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maame/Desktop/reactnd-project-myreads-starter/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport BookShelf from './BookShelf';\nimport BooksSearch from './BooksSearch';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Books: []\n    };\n\n    _this.fetch_books_details = function () {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState({\n          Books: books\n        });\n      });\n    };\n\n    _this.update_books_details = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function () {\n        _this.fetch_books_details();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (Books) {\n        _this2.setState({\n          Books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(BookShelf, {\n            books: _this3.state.Books,\n            onChange: _this3.update_books_details,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(BooksSearch, {\n            onChange: _this3.update_books_details,\n            myBooks: _this3.state.Books,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/maame/Desktop/reactnd-project-myreads-starter/src/App.js"],"names":["React","BooksAPI","Route","Link","BookShelf","BooksSearch","BooksApp","state","Books","fetch_books_details","getAll","then","books","setState","update_books_details","book","shelf","update","history","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAYRC,mB,GAAsB,YAAM;AAC1BR,MAAAA,QAAQ,CAACS,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,KAAD,EAAW;AAChC,cAAKC,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEI;AAAR,SAAd;AACD,OAFD;AAGD,K;;UAEDE,oB,GAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtCf,MAAAA,QAAQ,CAACgB,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,EAA6BL,IAA7B,CAAkC,YAAM;AACtC,cAAKF,mBAAL;AACD,OAFD;AAGD,K;;;;;;;wCAlBmB;AAAA;;AAClBR,MAAAA,QAAQ,CAACS,MAAT,GAAkBC,IAAlB,CAAuB,UAACH,KAAD,EAAW;AAChC,QAAA,MAAI,CAACK,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAEI;AADK,SAAd;AAGD,OAJD;AAKD;;;6BAcQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAAO,oBAAC,SAAD;AAAW,YAAA,KAAK,EAAE,MAAI,CAACL,KAAL,CAAWC,KAA7B;AAAoC,YAAA,QAAQ,EAAE,MAAI,CAACM,oBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,MAAM,EAAE;AAAA,cAAEI,OAAF,QAAEA,OAAF;AAAA,iBAAgB,oBAAC,WAAD;AAAa,YAAA,QAAQ,EAAE,MAAI,CAACJ,oBAA5B;AAAkD,YAAA,OAAO,EAAE,MAAI,CAACP,KAAL,CAAWC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAhCoBR,KAAK,CAACmB,S;;AAmC7B,eAAeb,QAAf","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route, Link } from 'react-router-dom'\nimport BookShelf from './BookShelf'\nimport BooksSearch from './BooksSearch'\n\nclass BooksApp extends React.Component {\n  state = {\n    Books: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((Books) => {\n      this.setState({\n        Books: books\n      })\n    })\n  }\n\n  fetch_books_details = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({Books: books})\n    })\n  }\n\n  update_books_details = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(() => {\n      this.fetch_books_details()\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/\" render={() => (<BookShelf books={this.state.Books} onChange={this.update_books_details}/>)}/>\n        <Route exact path=\"/search\" render={({history}) => (<BooksSearch onChange={this.update_books_details} myBooks={this.state.Books}/>)}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp"]},"metadata":{},"sourceType":"module"}